name: Java CI with Maven

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4
    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'
        cache: maven
    - name: Build with Maven
      run: mvn -B package --file pom.xml
      if: always() # Run always even if previous steps failed to get error output
    - name: Check build status
      if: steps.Build.outcome != 'success'
      run: |
        echo "Maven build failed. Check the logs for details."
        exit 1
    - name: Extract Version
      id: get_version
      run: |
        VERSION=$(grep '<version>' pom.xml | sed 's/<version>\(.*\)<\/version>/\1/')
        echo "VERSION=${VERSION}" >> $GITHUB_OUTPUT
    - name: Upload artifact
      uses: actions/upload-artifact@v4
      with:
        name: setSound-${{ steps.get_version.outputs.VERSION }}
        path: target/setSound-${{ steps.get_version.outputs.VERSION }}.jar # Assumes your jar name is setSound-${VERSION}.jar

  release:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Get Version from Build
        uses: actions/github-script@v6
        id: get_version_from_build
        with:
          script: |
            const version = context.payload.repository.default_branch_ref.match(/refs\/heads\/(.*)/)[1]
            return { version: `${version}` }
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: v${{ steps.get_version_from_build.outputs.version }} #Improved Tag Name
          release_name: Release v${{ steps.get_version_from_build.outputs.version }} # Improved Release Name
          body: |
            Release v${{ steps.get_version_from_build.outputs.version }}
            Changes in this Release:
            - First Change
            - Second Change
          draft: false
          prerelease: false